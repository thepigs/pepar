/* soapH.h
   Generated by gSOAP 2.7.17 from fe_schema.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_hierarchy_t
#define SOAP_TYPE_fe__fe_hierarchy_t (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_hierarchy_t(struct soap*, enum fe__fe_hierarchy_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_hierarchy_t(struct soap*, const char*, int, const enum fe__fe_hierarchy_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_hierarchy_t2s(struct soap*, enum fe__fe_hierarchy_t);
SOAP_FMAC3 enum fe__fe_hierarchy_t * SOAP_FMAC4 soap_in_fe__fe_hierarchy_t(struct soap*, const char*, enum fe__fe_hierarchy_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_hierarchy_t(struct soap*, const char*, enum fe__fe_hierarchy_t *);

#define soap_write_fe__fe_hierarchy_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_hierarchy_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_hierarchy_t(struct soap*, const enum fe__fe_hierarchy_t *, const char*, const char*);

#define soap_read_fe__fe_hierarchy_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_hierarchy_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_hierarchy_t * SOAP_FMAC4 soap_get_fe__fe_hierarchy_t(struct soap*, enum fe__fe_hierarchy_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_guard_interval_t
#define SOAP_TYPE_fe__fe_guard_interval_t (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_guard_interval_t(struct soap*, enum fe__fe_guard_interval_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_guard_interval_t(struct soap*, const char*, int, const enum fe__fe_guard_interval_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_guard_interval_t2s(struct soap*, enum fe__fe_guard_interval_t);
SOAP_FMAC3 enum fe__fe_guard_interval_t * SOAP_FMAC4 soap_in_fe__fe_guard_interval_t(struct soap*, const char*, enum fe__fe_guard_interval_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_guard_interval_t(struct soap*, const char*, enum fe__fe_guard_interval_t *);

#define soap_write_fe__fe_guard_interval_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_guard_interval_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_guard_interval_t(struct soap*, const enum fe__fe_guard_interval_t *, const char*, const char*);

#define soap_read_fe__fe_guard_interval_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_guard_interval_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_guard_interval_t * SOAP_FMAC4 soap_get_fe__fe_guard_interval_t(struct soap*, enum fe__fe_guard_interval_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_bandwidth_t
#define SOAP_TYPE_fe__fe_bandwidth_t (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_bandwidth_t(struct soap*, enum fe__fe_bandwidth_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_bandwidth_t(struct soap*, const char*, int, const enum fe__fe_bandwidth_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_bandwidth_t2s(struct soap*, enum fe__fe_bandwidth_t);
SOAP_FMAC3 enum fe__fe_bandwidth_t * SOAP_FMAC4 soap_in_fe__fe_bandwidth_t(struct soap*, const char*, enum fe__fe_bandwidth_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_bandwidth_t(struct soap*, const char*, enum fe__fe_bandwidth_t *);

#define soap_write_fe__fe_bandwidth_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_bandwidth_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_bandwidth_t(struct soap*, const enum fe__fe_bandwidth_t *, const char*, const char*);

#define soap_read_fe__fe_bandwidth_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_bandwidth_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_bandwidth_t * SOAP_FMAC4 soap_get_fe__fe_bandwidth_t(struct soap*, enum fe__fe_bandwidth_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_transmit_mode_t
#define SOAP_TYPE_fe__fe_transmit_mode_t (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_transmit_mode_t(struct soap*, enum fe__fe_transmit_mode_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_transmit_mode_t(struct soap*, const char*, int, const enum fe__fe_transmit_mode_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_transmit_mode_t2s(struct soap*, enum fe__fe_transmit_mode_t);
SOAP_FMAC3 enum fe__fe_transmit_mode_t * SOAP_FMAC4 soap_in_fe__fe_transmit_mode_t(struct soap*, const char*, enum fe__fe_transmit_mode_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_transmit_mode_t(struct soap*, const char*, enum fe__fe_transmit_mode_t *);

#define soap_write_fe__fe_transmit_mode_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_transmit_mode_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_transmit_mode_t(struct soap*, const enum fe__fe_transmit_mode_t *, const char*, const char*);

#define soap_read_fe__fe_transmit_mode_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_transmit_mode_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_transmit_mode_t * SOAP_FMAC4 soap_get_fe__fe_transmit_mode_t(struct soap*, enum fe__fe_transmit_mode_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_modulation_t
#define SOAP_TYPE_fe__fe_modulation_t (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_modulation_t(struct soap*, enum fe__fe_modulation_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_modulation_t(struct soap*, const char*, int, const enum fe__fe_modulation_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_modulation_t2s(struct soap*, enum fe__fe_modulation_t);
SOAP_FMAC3 enum fe__fe_modulation_t * SOAP_FMAC4 soap_in_fe__fe_modulation_t(struct soap*, const char*, enum fe__fe_modulation_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_modulation_t(struct soap*, const char*, enum fe__fe_modulation_t *);

#define soap_write_fe__fe_modulation_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_modulation_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_modulation_t(struct soap*, const enum fe__fe_modulation_t *, const char*, const char*);

#define soap_read_fe__fe_modulation_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_modulation_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_modulation_t * SOAP_FMAC4 soap_get_fe__fe_modulation_t(struct soap*, enum fe__fe_modulation_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_code_rate_t
#define SOAP_TYPE_fe__fe_code_rate_t (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_code_rate_t(struct soap*, enum fe__fe_code_rate_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_code_rate_t(struct soap*, const char*, int, const enum fe__fe_code_rate_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_code_rate_t2s(struct soap*, enum fe__fe_code_rate_t);
SOAP_FMAC3 enum fe__fe_code_rate_t * SOAP_FMAC4 soap_in_fe__fe_code_rate_t(struct soap*, const char*, enum fe__fe_code_rate_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_code_rate_t(struct soap*, const char*, enum fe__fe_code_rate_t *);

#define soap_write_fe__fe_code_rate_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_code_rate_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_code_rate_t(struct soap*, const enum fe__fe_code_rate_t *, const char*, const char*);

#define soap_read_fe__fe_code_rate_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_code_rate_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_code_rate_t * SOAP_FMAC4 soap_get_fe__fe_code_rate_t(struct soap*, enum fe__fe_code_rate_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_spectral_inversion_t
#define SOAP_TYPE_fe__fe_spectral_inversion_t (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_spectral_inversion_t(struct soap*, enum fe__fe_spectral_inversion_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_spectral_inversion_t(struct soap*, const char*, int, const enum fe__fe_spectral_inversion_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_spectral_inversion_t2s(struct soap*, enum fe__fe_spectral_inversion_t);
SOAP_FMAC3 enum fe__fe_spectral_inversion_t * SOAP_FMAC4 soap_in_fe__fe_spectral_inversion_t(struct soap*, const char*, enum fe__fe_spectral_inversion_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_spectral_inversion_t(struct soap*, const char*, enum fe__fe_spectral_inversion_t *);

#define soap_write_fe__fe_spectral_inversion_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_spectral_inversion_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_spectral_inversion_t(struct soap*, const enum fe__fe_spectral_inversion_t *, const char*, const char*);

#define soap_read_fe__fe_spectral_inversion_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_spectral_inversion_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_spectral_inversion_t * SOAP_FMAC4 soap_get_fe__fe_spectral_inversion_t(struct soap*, enum fe__fe_spectral_inversion_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_type_t
#define SOAP_TYPE_fe__fe_type_t (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_type_t(struct soap*, enum fe__fe_type_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_type_t(struct soap*, const char*, int, const enum fe__fe_type_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_type_t2s(struct soap*, enum fe__fe_type_t);
SOAP_FMAC3 enum fe__fe_type_t * SOAP_FMAC4 soap_in_fe__fe_type_t(struct soap*, const char*, enum fe__fe_type_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_type_t(struct soap*, const char*, enum fe__fe_type_t *);

#define soap_write_fe__fe_type_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_type_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_type_t(struct soap*, const enum fe__fe_type_t *, const char*, const char*);

#define soap_read_fe__fe_type_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_type_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_type_t * SOAP_FMAC4 soap_get_fe__fe_type_t(struct soap*, enum fe__fe_type_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_caps_t
#define SOAP_TYPE_fe__fe_caps_t (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_caps_t(struct soap*, enum fe__fe_caps_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_caps_t(struct soap*, const char*, int, const enum fe__fe_caps_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_caps_t2s(struct soap*, enum fe__fe_caps_t);
SOAP_FMAC3 enum fe__fe_caps_t * SOAP_FMAC4 soap_in_fe__fe_caps_t(struct soap*, const char*, enum fe__fe_caps_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_caps_t(struct soap*, const char*, enum fe__fe_caps_t *);

#define soap_write_fe__fe_caps_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_caps_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_caps_t(struct soap*, const enum fe__fe_caps_t *, const char*, const char*);

#define soap_read_fe__fe_caps_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_caps_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_caps_t * SOAP_FMAC4 soap_get_fe__fe_caps_t(struct soap*, enum fe__fe_caps_t *, const char*, const char*);

#ifndef SOAP_TYPE_fe__fe_status_t
#define SOAP_TYPE_fe__fe_status_t (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fe__fe_status_t(struct soap*, enum fe__fe_status_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__fe_status_t(struct soap*, const char*, int, const enum fe__fe_status_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_fe__fe_status_t2s(struct soap*, enum fe__fe_status_t);
SOAP_FMAC3 enum fe__fe_status_t * SOAP_FMAC4 soap_in_fe__fe_status_t(struct soap*, const char*, enum fe__fe_status_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2fe__fe_status_t(struct soap*, const char*, enum fe__fe_status_t *);

#define soap_write_fe__fe_status_t(soap, data) ( soap_begin_send(soap) || soap_put_fe__fe_status_t(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_fe__fe_status_t(struct soap*, const enum fe__fe_status_t *, const char*, const char*);

#define soap_read_fe__fe_status_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__fe_status_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum fe__fe_status_t * SOAP_FMAC4 soap_get_fe__fe_status_t(struct soap*, enum fe__fe_status_t *, const char*, const char*);

#ifndef SOAP_TYPE__fe__dvb_frontend_parameters
#define SOAP_TYPE__fe__dvb_frontend_parameters (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__fe__dvb_frontend_parameters(struct soap*, const char*, int, const _fe__dvb_frontend_parameters *, const char*);
SOAP_FMAC3 _fe__dvb_frontend_parameters * SOAP_FMAC4 soap_in__fe__dvb_frontend_parameters(struct soap*, const char*, _fe__dvb_frontend_parameters *, const char*);

#define soap_write__fe__dvb_frontend_parameters(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__fe__dvb_frontend_parameters(soap, data) ( soap_begin_recv(soap) || !soap_get__fe__dvb_frontend_parameters(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _fe__dvb_frontend_parameters * SOAP_FMAC4 soap_get__fe__dvb_frontend_parameters(struct soap*, _fe__dvb_frontend_parameters *, const char*, const char*);

#define soap_new__fe__dvb_frontend_parameters(soap, n) soap_instantiate__fe__dvb_frontend_parameters(soap, n, NULL, NULL, NULL)


#define soap_delete__fe__dvb_frontend_parameters(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _fe__dvb_frontend_parameters * SOAP_FMAC2 soap_instantiate__fe__dvb_frontend_parameters(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__fe__dvb_frontend_parameters(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__fe__dvb_frontend_info
#define SOAP_TYPE__fe__dvb_frontend_info (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__fe__dvb_frontend_info(struct soap*, const char*, int, const _fe__dvb_frontend_info *, const char*);
SOAP_FMAC3 _fe__dvb_frontend_info * SOAP_FMAC4 soap_in__fe__dvb_frontend_info(struct soap*, const char*, _fe__dvb_frontend_info *, const char*);

#define soap_write__fe__dvb_frontend_info(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__fe__dvb_frontend_info(soap, data) ( soap_begin_recv(soap) || !soap_get__fe__dvb_frontend_info(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _fe__dvb_frontend_info * SOAP_FMAC4 soap_get__fe__dvb_frontend_info(struct soap*, _fe__dvb_frontend_info *, const char*, const char*);

#define soap_new__fe__dvb_frontend_info(soap, n) soap_instantiate__fe__dvb_frontend_info(soap, n, NULL, NULL, NULL)


#define soap_delete__fe__dvb_frontend_info(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _fe__dvb_frontend_info * SOAP_FMAC2 soap_instantiate__fe__dvb_frontend_info(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__fe__dvb_frontend_info(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__fe__fe_status
#define SOAP_TYPE__fe__fe_status (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__fe__fe_status(struct soap*, const char*, int, const _fe__fe_status *, const char*);
SOAP_FMAC3 _fe__fe_status * SOAP_FMAC4 soap_in__fe__fe_status(struct soap*, const char*, _fe__fe_status *, const char*);

#define soap_write__fe__fe_status(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__fe__fe_status(soap, data) ( soap_begin_recv(soap) || !soap_get__fe__fe_status(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _fe__fe_status * SOAP_FMAC4 soap_get__fe__fe_status(struct soap*, _fe__fe_status *, const char*, const char*);

#define soap_new__fe__fe_status(soap, n) soap_instantiate__fe__fe_status(soap, n, NULL, NULL, NULL)


#define soap_delete__fe__fe_status(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _fe__fe_status * SOAP_FMAC2 soap_instantiate__fe__fe_status(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__fe__fe_status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_fe__dvb_ofdm_parameters_t
#define SOAP_TYPE_fe__dvb_ofdm_parameters_t (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_fe__dvb_ofdm_parameters_t(struct soap*, const char*, int, const fe__dvb_ofdm_parameters_t *, const char*);
SOAP_FMAC3 fe__dvb_ofdm_parameters_t * SOAP_FMAC4 soap_in_fe__dvb_ofdm_parameters_t(struct soap*, const char*, fe__dvb_ofdm_parameters_t *, const char*);

#define soap_write_fe__dvb_ofdm_parameters_t(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_fe__dvb_ofdm_parameters_t(soap, data) ( soap_begin_recv(soap) || !soap_get_fe__dvb_ofdm_parameters_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 fe__dvb_ofdm_parameters_t * SOAP_FMAC4 soap_get_fe__dvb_ofdm_parameters_t(struct soap*, fe__dvb_ofdm_parameters_t *, const char*, const char*);

#define soap_new_fe__dvb_ofdm_parameters_t(soap, n) soap_instantiate_fe__dvb_ofdm_parameters_t(soap, n, NULL, NULL, NULL)


#define soap_delete_fe__dvb_ofdm_parameters_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 fe__dvb_ofdm_parameters_t * SOAP_FMAC2 soap_instantiate_fe__dvb_ofdm_parameters_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_fe__dvb_ofdm_parameters_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedInteger
#define SOAP_TYPE_xsd__unsignedInteger (9)
#endif

#define soap_default_xsd__unsignedInteger(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__unsignedInteger(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedInteger(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__unsignedInteger(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__unsignedInteger(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedInteger(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__unsignedInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__unsignedInteger(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__unsignedInteger(soap, n) soap_instantiate_xsd__unsignedInteger(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__unsignedInteger(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__unsignedInteger soap_instantiate_std__string


#define soap_copy_xsd__unsignedInteger soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE__fe__union_dvb_frontend_parameters
#define SOAP_TYPE__fe__union_dvb_frontend_parameters (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__fe__union_dvb_frontend_parameters(struct soap*, int, const union _fe__union_dvb_frontend_parameters *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__fe__union_dvb_frontend_parameters(struct soap*, int, const union _fe__union_dvb_frontend_parameters *);
SOAP_FMAC3 union _fe__union_dvb_frontend_parameters * SOAP_FMAC4 soap_in__fe__union_dvb_frontend_parameters(struct soap*, int*, union _fe__union_dvb_frontend_parameters *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTofe__dvb_ofdm_parameters_t
#define SOAP_TYPE_PointerTofe__dvb_ofdm_parameters_t (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofe__dvb_ofdm_parameters_t(struct soap*, fe__dvb_ofdm_parameters_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofe__dvb_ofdm_parameters_t(struct soap*, const char *, int, fe__dvb_ofdm_parameters_t *const*, const char *);
SOAP_FMAC3 fe__dvb_ofdm_parameters_t ** SOAP_FMAC4 soap_in_PointerTofe__dvb_ofdm_parameters_t(struct soap*, const char*, fe__dvb_ofdm_parameters_t **, const char*);

#define soap_write_PointerTofe__dvb_ofdm_parameters_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTofe__dvb_ofdm_parameters_t(soap, data), 0) || soap_put_PointerTofe__dvb_ofdm_parameters_t(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofe__dvb_ofdm_parameters_t(struct soap*, fe__dvb_ofdm_parameters_t *const*, const char*, const char*);

#define soap_read_PointerTofe__dvb_ofdm_parameters_t(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTofe__dvb_ofdm_parameters_t(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 fe__dvb_ofdm_parameters_t ** SOAP_FMAC4 soap_get_PointerTofe__dvb_ofdm_parameters_t(struct soap*, fe__dvb_ofdm_parameters_t **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
